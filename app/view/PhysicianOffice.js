/*
 * File: app/view/PhysicianOffice.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('SignaTouch.view.PhysicianOffice', {
    extend: 'Ext.window.Window',
    alias: 'widget.NewPhysicanOffice',

    requires: [
        'Ext.form.Panel',
        'Ext.form.FieldSet',
        'Ext.form.field.ComboBox',
        'Ext.button.Button'
    ],

    height: 317,
    hidden: false,
    id: 'PhysicianOfficeID',
    width: 656,
    title: 'Physician Office',
    hideShadowOnDeactivate: true,
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    id: 'PopForm3',
                    layout: 'auto',
                    bodyPadding: 10,
                    bodyStyle: 'background-color:#a5cfff;',
                    title: '',
                    titleAlign: 'center',
                    items: [
                        {
                            xtype: 'fieldset',
                            height: 258,
                            style: 'border-style:solid;\r\nborder-color:#000000;',
                            width: 629,
                            title: '<font size="4">Physician Office</font>',
                            items: [
                                {
                                    xtype: 'container',
                                    itemId: 'NPI',
                                    margin: '7 0 7 0',
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            id: 'txtPOPPhyNPIID',
                                            itemId: '',
                                            width: 300,
                                            fieldLabel: '<b>Physician NPI&nbsp;</b>',
                                            inputId: 'txtPOPPhyNPI',
                                            readOnly: true,
                                            allowBlank: false,
                                            enforceMaxLength: true,
                                            maxLength: 10,
                                            vtype: 'alphanum'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    itemId: 'Address',
                                    margin: '7 0 7 0',
                                    layout: 'vbox',
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            id: 'txtPOPPhyAddress1ID',
                                            itemId: '',
                                            width: 600,
                                            fieldLabel: '<b>Address1&nbsp;<span style="color:#D94E37;">*</span></b>',
                                            inputId: 'txtPOPFacilityAddress1',
                                            allowBlank: false
                                        },
                                        {
                                            xtype: 'textfield',
                                            id: 'txtPOPPhyAddress2ID',
                                            width: 600,
                                            fieldLabel: '<b>Address2</b>',
                                            inputId: 'txtPOPPhyAddress2'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    itemId: 'Citystatezip',
                                    margin: '7 0 7 0',
                                    layout: {
                                        type: 'hbox',
                                        align: 'stretch'
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            id: 'txtPOPPhyCityID',
                                            itemId: '',
                                            width: 300,
                                            fieldLabel: '<b>City&nbsp;<span style="color:#D94E37;">*</span></b>',
                                            msgTarget: 'side',
                                            inputId: 'txtPOPPhyCity',
                                            allowBlank: false,
                                            regex: /^[a-zA-Z\s]*$/,
                                            regexText: 'Please enter valid city'
                                        },
                                        {
                                            xtype: 'combobox',
                                            flex: 1,
                                            id: 'ddlPOPPhyStateID',
                                            maxWidth: 300,
                                            fieldLabel: '<b>&nbsp;&nbsp;&nbsp;State&nbsp;<span style="color:#D94E37;">*</span></b>',
                                            value: [
                                                'AL'
                                            ],
                                            inputId: 'ddlPOPFacilityState',
                                            allowBlank: false,
                                            regexText: '',
                                            editable: false,
                                            displayField: 'des',
                                            queryMode: 'local',
                                            store: 'States',
                                            valueField: 'id'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    itemId: 'PhoneNo',
                                    margin: '7 0 7 0',
                                    layout: {
                                        type: 'hbox',
                                        align: 'stretch'
                                    },
                                    items: [
                                        {
                                            xtype: 'textfield',
                                            id: 'txtPOPPhyzipID',
                                            itemId: '',
                                            width: 300,
                                            fieldLabel: '<b>Zip&nbsp;<span style="color:#D94E37;">*</span></b>',
                                            msgTarget: 'side',
                                            inputId: 'txtPOPFacilityzip',
                                            allowBlank: false,
                                            enforceMaxLength: true,
                                            maxLength: 10,
                                            regex: /(^\d{5}$)|(^\d{5}-\d{4}$)/,
                                            regexText: 'Invalid Zip Code'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    itemId: 'Button',
                                    margin: '7 0 7 0',
                                    maxWidth: 600,
                                    layout: {
                                        type: 'hbox',
                                        align: 'stretch',
                                        pack: 'end'
                                    },
                                    items: [
                                        {
                                            xtype: 'button',
                                            id: 'btnPOPPhyReset',
                                            itemId: '',
                                            margin: '0 10 0 0',
                                            padding: '',
                                            width: 92,
                                            text: 'Reset',
                                            listeners: {
                                                click: {
                                                    fn: me.onBtnPOPPhyCancelClick,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'button',
                                            formBind: true,
                                            id: 'btnPOPPhySave',
                                            margin: '0 0 0 0',
                                            width: 92,
                                            text: 'Save',
                                            listeners: {
                                                click: {
                                                    fn: me.onBtnPOPFacilitySaveClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onBtnPOPPhyCancelClick: function(button, e, eOpts) {
        Ext.getCmp('PopForm3').getForm().reset();
    },

    onBtnPOPFacilitySaveClick: function(button, e, eOpts) {
        var form = button.up('form');
                   //var header = button.up('headerPanel');
                       values = form.getValues();
                var LocalHDRid = localStorage.getItem('SectionAHDRID');
                var successCallbackFacility = function(resp, ops) {

                    Ext.getCmp('FacilityNameText').setValue(Ext.JSON.decode(resp.responseText));
                };
                var failureCallbackFacility = function(resp, ops) {};
                // Success
                var successCallback = function(resp, ops) {
                    var responseOjbect = JSON.parse(Ext.JSON.decode(resp.responseText));
                    if(responseOjbect.status === true){

                      Ext.Msg.alert("Data Inserted", 'New Facility Created');

                        Ext.getCmp('POPUPFacilityID').hide();

                        // fetch facility name from facility NPI and display in textfield
                        Ext.Ajax.request({url: "services/SectionA.php?action=fetchFacilityName&facility_NPI="+responseOjbect.facility_npi,
                        method: 'POST',
                        params: values,
                        success: successCallbackFacility,
                        failure: failureCallbackFacility
                 });
                                    // Code to reset the form values
                    form.getForm().getFields().each(function(f){
                    f.originalValue=undefined;
                    });
                    form.getForm().reset();
                   }
                   else if(responseOjbect.status === 'false'){

                      Ext.Msg.alert("Duplicate Entry", 'Facility NPI Already Exists');

                   }
                    else{

                    Ext.Msg.alert("Insert Failure", 'Data cannot be added');
                    }

                };

                // Failure
                var failureCallback = function(resp, ops) {

                    // Show login failure error
                    //Ext.Msg.alert("Login Failure", 'Incorrect Username or Password');

                };


                // TODO: Login using server-side authentication service
                Ext.Ajax.request({url: "services/Maintainence.php?action=insertFacility&HdrID="+LocalHDRid,
                        method: 'POST',
                        params: values,
                        success: successCallback,
                        failure: failureCallback
                 });
    }

});